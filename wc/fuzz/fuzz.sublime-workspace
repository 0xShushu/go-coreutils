{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"wr",
				"WriteString	n int, err error ƒ"
			],
			[
				"Hs",
				"HasPrefix	bool ƒ"
			],
			[
				"WR",
				"WriteString	n int, err error ƒ"
			],
			[
				"Re",
				"Readdirnames	names []string, err error ƒ"
			],
			[
				"S",
				"Sub	time.Duration ƒ"
			],
			[
				"U",
				"Unix	time.Time ƒ"
			],
			[
				"Uni",
				"UnixDate	 Ɩ"
			],
			[
				"Post",
				"PostFormValue	string ƒ"
			],
			[
				"end",
				"endDate	time.Time ν"
			],
			[
				"P",
				"Println	n int, err error ƒ"
			],
			[
				"Print",
				"Printf	n int, err error ƒ"
			],
			[
				"remem",
				"rememberValue	[]byte ν"
			],
			[
				"e",
				"End	time.Time ν"
			],
			[
				"qC",
				"qComma	[]byte ν"
			],
			[
				"E",
				"End	time.Time ν"
			],
			[
				"Wr",
				"WriteString	n int, err error ƒ"
			],
			[
				"Write",
				"WriterTo	interface ¡"
			],
			[
				"ne",
				"next	func() uint32 ν"
			],
			[
				"New",
				"NewGray	*image.Gray ƒ"
			],
			[
				"imag",
				"image	 package ρ"
			],
			[
				"H",
				"WriteHeader	 ƒ"
			],
			[
				"w",
				"Write	int, error ƒ"
			],
			[
				"ht",
				"httprouter	 package ρ"
			],
			[
				"camp",
				"campaigns	[]*types.Campaign ν"
			],
			[
				"PRIN",
				"Println	n int, err error ƒ"
			],
			[
				"ErrInvalid",
				"ErrInvalidRegistrationCode	error ν"
			],
			[
				"Get",
				"GetFlashes	erf string, inf string ƒ"
			],
			[
				"Tem",
				"TmplName	uint8 ʈ"
			],
			[
				"Redre",
				"Redirect	 ƒ"
			],
			[
				"eRRUN",
				"ErrUnableToLogOut	error ν"
			],
			[
				"ses",
				"sessionKey	 Ɩ"
			],
			[
				"i",
				"IsValidCSRF	bool ƒ"
			],
			[
				"Statusbad",
				"StatusBadRequest	 Ɩ"
			],
			[
				"Statusba",
				"StatusBadRequest	 Ɩ"
			],
			[
				"htt",
				"http	 package ρ"
			],
			[
				"GetSes",
				"GetSetSession	*ServerSession ƒ"
			],
			[
				"session",
				"sessions	 package ρ"
			],
			[
				"PAS",
				"passTwo	[]byte ν"
			],
			[
				"Respon",
				"ResponseWriter	interface ¡"
			],
			[
				"Regist",
				"RegisterName	 ƒ"
			],
			[
				"type",
				"types	 package ρ"
			],
			[
				"Sp",
				"SpecificCampaignBasePath	 Ɩ"
			],
			[
				"F",
				"Form	url.Values ν"
			],
			[
				"Sub",
				"SubmitText	string ν"
			],
			[
				"T",
				"TypeOf	reflect.Type ƒ"
			],
			[
				"Field",
				"FieldByName	reflect.Value ƒ"
			],
			[
				"tru",
				"truthy	map[string]bool ν"
			],
			[
				"Va",
				"ValueOf	reflect.Value ƒ"
			],
			[
				"Fiel",
				"FieldByName	reflect.Value ƒ"
			],
			[
				"PRin",
				"Printf	n int, err error ƒ"
			],
			[
				"Eno",
				"EncodeToString	string ƒ"
			],
			[
				"Prin",
				"Println	n int, err error ƒ"
			],
			[
				"re",
				"Remove	error ƒ"
			],
			[
				"te",
				"TempFile	f *os.File, err error ƒ"
			],
			[
				"Errmiss",
				"ErrMissingFile	error ν"
			],
			[
				"SES",
				"session	*sessions.Session ν"
			],
			[
				"p",
				"Println	n int, err error ƒ"
			],
			[
				"O",
				"owner	string ν"
			],
			[
				"FO",
				"FormFile	multipart.File, *multipart.FileHeader, error ƒ"
			],
			[
				"Par",
				"ParseMultipartForm	error ƒ"
			],
			[
				"ca",
				"campaigns	[]*types.Campaign ν"
			],
			[
				"Ca",
				"EditCampaignsPath	 Ɩ"
			],
			[
				"W",
				"WriteString	n int, err error ƒ"
			],
			[
				"Rec",
				"Recipients	[]Recipient ʈ"
			],
			[
				"Spr",
				"Sprintf	string ƒ"
			],
			[
				"er",
				"Errorln	 ƒ"
			],
			[
				"q",
				"QueryRow	*sql.Row ƒ"
			],
			[
				"tex",
				"sessionText	 Ɩ"
			],
			[
				"sess",
				"sessionStmt	*sql.Stmt ν"
			],
			[
				"fu",
				"FuncMap	template.FuncMap ν"
			],
			[
				"must",
				"mustFunc	*template.Template ƒ"
			],
			[
				"tem",
				"template	 package ρ"
			],
			[
				"file",
				"files	...string ν"
			],
			[
				"Te",
				"template	 package ρ"
			],
			[
				"templ",
				"template	 package ρ"
			],
			[
				"fil",
				"file	string ν"
			],
			[
				"Fa",
				"Fatalln	 ƒ"
			],
			[
				"Es",
				"IsExist	bool ƒ"
			],
			[
				"SITE",
				"siteBase	string ν"
			],
			[
				"TE",
				"TemplateGenerator	func() *Template ʈ"
			],
			[
				"Templ",
				"TemplateGenerator	func() *Template ʈ"
			],
			[
				"temp",
				"template	 package ρ"
			],
			[
				"Tmpl",
				"TmplInfo	struct ʈ"
			],
			[
				"Tm",
				"TmplMap	map[string]struct ν"
			],
			[
				"site",
				"siteBase	string ν"
			],
			[
				"spec",
				"specificCampaignBase	string ν"
			],
			[
				"Speci",
				"SpecificCampaign	 Ɩ"
			],
			[
				"Fat",
				"Fatalf	 ƒ"
			],
			[
				"Fatal",
				"Fatalln	 ƒ"
			],
			[
				"typ",
				"types	 package ρ"
			],
			[
				"K",
				"Kind	reflect.Kind ƒ"
			],
			[
				"tye",
				"types	 package ρ"
			],
			[
				"ty",
				"types	 package ρ"
			],
			[
				"Camp",
				"campaign	*types.Campaign ν"
			],
			[
				"R",
				"RemoteAddr	string ν"
			],
			[
				"St",
				"Struct	 Ɩ"
			],
			[
				"Hn",
				"Handle	 ƒ"
			],
			[
				"pos",
				"PostForm	url.Values ν"
			],
			[
				"POst",
				"PostForm	resp *http.Response, err error ƒ"
			],
			[
				"sch",
				"Schema	*schema.Decoder ν"
			],
			[
				"addr",
				"addrEnd	 Ɩ"
			],
			[
				"add",
				"addrStart	 Ɩ"
			],
			[
				"comm",
				"committees"
			],
			[
				"b",
				"b64	 ν"
			],
			[
				"accep",
				"accept-charset	Attr"
			],
			[
				"h",
				"Host	string ν"
			],
			[
				"csrf",
				"CSRFToken	 Ɩ"
			],
			[
				"AD",
				"RemoteAddr	string ν"
			],
			[
				"Ses",
				"session	*sessions.Session ν"
			],
			[
				"NO",
				"now	int64 ν"
			],
			[
				"u",
				"Unix	int64 ƒ"
			],
			[
				"sessi",
				"session	*sessions.Session ν"
			],
			[
				"ER",
				"Errorln	 ƒ"
			],
			[
				"AUT",
				"authLen	int ν"
			],
			[
				"ed",
				"endLen	int ν"
			],
			[
				"star",
				"startLen	int ν"
			],
			[
				"Pri",
				"Println	n int, err error ƒ"
			],
			[
				"UN",
				"Unix	int64 ƒ"
			],
			[
				"qco",
				"qComma	[]byte ν"
			],
			[
				"RE",
				"Request	struct ʈ"
			],
			[
				"inf",
				"inf	string ν"
			],
			[
				"Statusfo",
				"StatusFound	 Ɩ"
			],
			[
				"resposn",
				"ResponseWriter	interface ¡"
			],
			[
				"res",
				"ResponseText	string ν"
			],
			[
				"ERr",
				"Errorln	 ƒ"
			],
			[
				"us",
				"use strict';	'use strict';"
			],
			[
				"Error",
				"new Error(${0:message})	Error"
			],
			[
				"getElementsB",
				"getElementsByClassName(${0:names})	Element"
			]
		]
	},
	"buffers":
	[
		{
			"file": "fuzz.go",
			"settings":
			{
				"buffer_size": 205,
				"line_ending": "Unix"
			}
		},
		{
			"file": "wc_test.go",
			"settings":
			{
				"buffer_size": 1287,
				"line_ending": "Unix"
			}
		},
		{
			"file": "wc.go",
			"settings":
			{
				"buffer_size": 9948,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "goimpo",
		"selected_items":
		[
			[
				"goimpo",
				"GoImports"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"gomipo",
				"GoImports"
			],
			[
				"docum",
				"GoSublime: Show documentation hint"
			],
			[
				"",
				"About"
			],
			[
				"new view",
				"File: New View into File"
			],
			[
				"\\",
				"GoSublime: Add/Remove package"
			],
			[
				"Snippet: html",
				"Snippet: html"
			],
			[
				"sh",
				"Snippet: htmlboiler"
			],
			[
				"docu",
				"GoSublime: Show documentation hint"
			],
			[
				"lint",
				"SublimeLinter: Show All Errors"
			],
			[
				"git b",
				"Git: Blame"
			],
			[
				"doc",
				"GoSublime: Show documentation hint"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"goim",
				"GoImports"
			],
			[
				"gofm",
				"GoSublime: Fmt and save"
			],
			[
				"goimp",
				"GoImports"
			],
			[
				"godoc",
				"GoSublime: Show documentation hint"
			],
			[
				"new",
				"File: New View into File"
			],
			[
				"goimpor",
				"GoImports"
			],
			[
				"goiom",
				"GoImports"
			],
			[
				"goimport",
				"GoImports"
			],
			[
				"gofmt",
				"GoSublime: Fmt and save"
			],
			[
				"goimports",
				"GoImports"
			],
			[
				"gosublime",
				"GoSublime: Open Error Log"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			],
			[
				"goimpot",
				"GoImports"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"docui",
				"GoSublime: Show documentation hint"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"newvi",
				"File: New View into File"
			],
			[
				"newv",
				"File: New View into File"
			],
			[
				"do",
				"WordPress Developer: Open Function Reference"
			],
			[
				"php",
				"PHP Code Sniffer: Clear sniffer marks"
			],
			[
				"go",
				"GoSublime: User Settings"
			],
			[
				"bui",
				"GoSublime: Run build command"
			],
			[
				"build",
				"Build: Build"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"snipp",
				"Snippet: html"
			],
			[
				"newview",
				"File: New View into File"
			],
			[
				"test",
				"GoSublime: Run Tests"
			],
			[
				"open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"new vi",
				"File: New View into File"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"file",
				"File: New View into File"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 538.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/eric/gopath/src/github.com/EricLagerg/go-coreutils/wc/fuzz/testing/crashers/da39a3ee5e6b4b0d3255bfef95601890afd80709.output",
		"/home/eric/gopath/src/github.com/EricLagerg/go-coreutils/wc/fuzz/testing/crashers/da39a3ee5e6b4b0d3255bfef95601890afd80709.quoted",
		"/home/eric/gopath/src/github.com/EricLagerg/go-coreutils/wc/fuzz/fuzz.sublime-workspace",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/build.bash",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/app.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/rebuild.log",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/About.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/AccessCode.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Account.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/AppBase.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Campaigns.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Create.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Dashboard.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/ErrorPage.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/HOTPApp.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Imports.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Index.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Login.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Logout.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/NoDomainLogin.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Pricing.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Reset.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/SiteBase.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/SpecificCampaign.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/SpecificCampaignBase.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/Support.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/templates/TFA.gohtml",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/middleware/auth.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/_version_check",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/genlicenses.bash",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/envvar.bash",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/fixlicense.bash",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/campaigns.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/json.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/forms/convert.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/login.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/database/delete_old_rows.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/server_session.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/auth.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/database/database.sql",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/gorilla_session.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/errors.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/types.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/server_session_contextkey.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/csrf.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/logout.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/paths/paths.go",
		"/home/eric/github-repos/evercookie/php/evercookie_png.php",
		"/home/eric/github-repos/evercookie/php/evercookie_etag.php",
		"/home/eric/github-repos/evercookie/php/evercookie_cache.php",
		"/home/eric/github-repos/evercookie/php/_cookie_name.php",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/static/ec/js/evercookie.js",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/evercookie.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/routes.go",
		"/home/eric/github-repos/evercookie/js/evercookie.js",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/reload/reload.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/reload/helper_funcs.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/dashboard.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/websockets.go",
		"/home/eric/gopath/src/github.com/EricLagerg/httprouter/router.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/helpers/helpers.go",
		"/home/eric/gopath/src/github.com/EricLagerg/httprouter/tree.go",
		"/home/eric/github-repos/evercookie/assets/evercookie_sl/evercookie.sln",
		"/home/eric/github-repos/evercookie/js/swfobject-2.2.min.js",
		"/home/eric/github-repos/evercookie/index.html",
		"/home/eric/github-repos/evercookie/css/master.css",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/views/constants.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/views/render.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/views/index.html",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/Godeps/_workspace/src/github.com/EricLagerg/httprouter/router.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/Godeps/_workspace/src/github.com/golang/glog/glog.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/Godeps/Godeps.json",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/version_check.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/teiwowe/genlicenses.bash",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/teiwowe/wat/idk.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/about.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/types/controller_types.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/account.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/database/sql.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/reset.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/create.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/tfa.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/tfa/tfa.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/error.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/index.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/hotp.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/tfa/tfa_sql.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/abouabout.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/domains.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/handlers.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/import.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/pricing.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/register.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/schema.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/support.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/contextkey.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/contextkey.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/controllers/lipsum.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/session.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/session_funcs.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/api/api.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/types/database_types.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/database/models.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/jobs/job_pool.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/jobs/parsers.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/session/gorilla_session.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/legconnect/legconnect.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/legconnect/legconnect_funcs.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user/password.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user/create_remove.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user/get.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user/messaging.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user/reset.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user/user.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user/user_funcs.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/user.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/redis.conf",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/session/session_funcs.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/session/json.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/session/session.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/session/session_funcs_test.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/auth/constants.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/publish/user.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/publish/legconnect.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/publish/database_types.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/publish/controller_types.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/publish/recipients.go",
		"/home/eric/gopath/src/github.com/SermoDigital/sermocrm/publish/datauri.go"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"fmt.Errorf",
			"fatal.",
			"log.FAtalf",
			"[ ",
			"clientDate",
			"cookieAge",
			"return status",
			"return false",
			"ss",
			"goto inval",
			"isZer",
			"fmt.P",
			"cookieAge",
			"cookieageint",
			"cookieage",
			"cookieAge",
			"marshalJSON",
			"marshaljson",
			"fals",
			"remember",
			"query",
			"add(",
			"isbadexpiry",
			"timeFmt",
			"icolon",
			"endDate",
			"cookieAgeInt",
			"endDate",
			"true",
			"fmt.",
			"defaultOptionMap",
			"candidate",
			"ecName",
			"google",
			"google.com",
			"cookie",
			"304",
			"charset",
			"async defer",
			"phpuri",
			".php",
			"everookie",
			"\n	",
			"HEADER(",
			"'",
			"w.Header()",
			"header(",
			"'",
			", true",
			", false",
			"connect",
			"authHandle(",
			"Campaign.",
			"User.",
			"username",
			"ErrBadUsername",
			"username",
			"user, exist",
			"EXISTS",
			"exists",
			"fORMid",
			"DAta.",
			"Data",
			"ss",
			"Error:",
			"Error",
			"Error\"",
			"Error(),\\n)",
			"Error()",
			"csrf",
			"views.RenderTEmplate(w, r, reload.ERrorpage, http.statusinternalservererror, database.errinternalservererror)",
			"views.RenderTemplatE(w, r, reload.ErrorPage, http.statusinternalservererror, database.errinternalservererror)",
			"\n		",
			"renderTemplate",
			".Campaign",
			".",
			"..",
			"{{",
			".",
			"GetFlashes",
			"AddSaveFlash(session",
			"GetUser(",
			"GetUser",
			"authHandler",
			"auth.AuthHandler",
			"authHandle",
			"sessioNkey",
			"goto inval",
			"+ ",
			"CheckSession",
			"Params)",
			"params)",
			"user",
			"unix.",
			"session.",
			"DataURI",
			"CSS",
			"types.",
			"types.Campaign",
			"types.",
			"ComparePassword",
			"comparepassword",
			"cookieAgeInt",
			"cookieAge",
			"auth.Check",
			"session.",
			"authDate",
			"authToken",
			"cookieName",
			"cookieage",
			"authToken",
			"cookieName",
			"database.Noorg",
			"databaseErrNoUser",
			"ErrNoUser",
			"ERrinternalserverERror",
			"ERrInternalServerError",
			"database.",
			"db.",
			"types.",
			"types.User",
			"db.",
			"types.",
			"types",
			"reset",
			"DB.",
			"types.User",
			"database."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "fuzz.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 205,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								205
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "wc_test.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1287,
						"regions":
						{
						},
						"selection":
						[
							[
								464,
								464
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 78.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "wc.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9948,
						"regions":
						{
						},
						"selection":
						[
							[
								6928,
								6928
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5060.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fuzz.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"account",
				"controllers/account.go"
			],
			[
				"",
				"~/gopath/src/github.com/SermoDigital/sermocrm/paths/paths.go"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
